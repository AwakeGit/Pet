version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  orders:
    build: ./orders
    command: uvicorn main:app --host 0.0.0.0 --port 8001
    volumes:
      - ./orders:/app
    ports:
      - "8001:8001"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - mongodb

  logistics:
    build: ./logistics
    command: uvicorn main:app --host 0.0.0.0 --port 8002
    volumes:
      - ./logistics:/app
    ports:
      - "8002:8002"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - mongodb

  notifications:
    build: ./notifications
    command: uvicorn main:app --host 0.0.0.0 --port 8003
    volumes:
      - ./notifications:/app
    ports:
      - "8003:8003"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - mongodb

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - orders
      - logistics
      - notifications

volumes:
  mongo_data:
